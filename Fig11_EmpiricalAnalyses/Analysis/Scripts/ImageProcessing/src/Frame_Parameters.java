
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author David
 */
public class Frame_Parameters extends javax.swing.JFrame {

    /**
     * Creates new form Frame_Parameters
     */
    public Frame_Parameters(Frame_DataSampler fds) {

        this.fds = fds;

        initComponents();
        setDataSamplerParameters();
        setPartitionEnabling();
    }

    //disables the editing of all parameters
    public void disableParameterEditing() {
        setDataSamplerParameters();
        TextField_Attributes.setEnabled(false);
        TextField_Characters.setEnabled(false);
        TextField_ImageSize.setEnabled(false);
        TextField_Images.setEnabled(false);
        //TextField_K.setEnabled(false);
        TextField_Local.setEnabled(false);
        TextField_MontageSize.setEnabled(false);
        TextField_Overview.setEnabled(false);
        TextField_OverviewSaveSize.setEnabled(false);
        TextField_Root.setEnabled(false);
        TextField_Samples.setEnabled(false);
        TextField_SessionID.setEnabled(false);
        TextField_Testing.setEnabled(false);
        TextField_Training.setEnabled(false);
        TextField_User.setEnabled(false);
        TextField_Validating.setEnabled(false);
        TextField_Window.setEnabled(false);
        //TextField_Zoom.setEnabled(false);
        CheckBox_PartitionSamplesByFile.setEnabled(false);
        ComboBox_ImageFormat.setEnabled(false);
    }

    public void setPartitionEnabling() {
        if (fds.checkPriorPartitioningScheme(false)) {
            this.CheckBox_PartitionSamplesByFile.setSelected(true);
        } else {
            this.CheckBox_PartitionSamplesByFile.setSelected(false);
        }

        if (fds.disablePartitionTypeSelection) {
            //System.out.println("Disabling partitioning editing");
            this.CheckBox_PartitionSamplesByFile.setEnabled(false);
            this.TextField_Testing.setEnabled(false);
            this.TextField_Training.setEnabled(false);
            this.TextField_Validating.setEnabled(false);
        } else {
            this.CheckBox_PartitionSamplesByFile.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrollPane_Main = new javax.swing.JScrollPane();
        Panel_Main = new javax.swing.JPanel();
        Panel_Directories = new javax.swing.JPanel();
        Label_Samples = new javax.swing.JLabel();
        TextField_Samples = new javax.swing.JTextField();
        Label_Images = new javax.swing.JLabel();
        TextField_Images = new javax.swing.JTextField();
        Label_Attributes = new javax.swing.JLabel();
        TextField_Attributes = new javax.swing.JTextField();
        Label_Characters = new javax.swing.JLabel();
        TextField_Characters = new javax.swing.JTextField();
        Label_Root = new javax.swing.JLabel();
        TextField_Root = new javax.swing.JTextField();
        Panel_Images = new javax.swing.JPanel();
        Label_ImageSize = new javax.swing.JLabel();
        TextField_ImageSize = new javax.swing.JTextField();
        Label_Local = new javax.swing.JLabel();
        TextField_Local = new javax.swing.JTextField();
        Label_Window = new javax.swing.JLabel();
        TextField_Window = new javax.swing.JTextField();
        Label_Overview = new javax.swing.JLabel();
        TextField_Overview = new javax.swing.JTextField();
        Label_OverviewSaveSize = new javax.swing.JLabel();
        Label_MontageSavedSize = new javax.swing.JLabel();
        TextField_OverviewSaveSize = new javax.swing.JTextField();
        TextField_MontageSize = new javax.swing.JTextField();
        Label_ImageFormat = new javax.swing.JLabel();
        ComboBox_ImageFormat = new javax.swing.JComboBox<>();
        Label_Zoom = new javax.swing.JLabel();
        TextField_Zoom = new javax.swing.JTextField();
        Panel_SessionInformation = new javax.swing.JPanel();
        Label_SessionID = new javax.swing.JLabel();
        Label_User = new javax.swing.JLabel();
        TextField_SessionID = new javax.swing.JTextField();
        TextField_User = new javax.swing.JTextField();
        Panel_KMeans = new javax.swing.JPanel();
        Label_K = new javax.swing.JLabel();
        TextField_K = new javax.swing.JTextField();
        Panel_MachineLearning = new javax.swing.JPanel();
        Label_Training = new javax.swing.JLabel();
        Label_Testing = new javax.swing.JLabel();
        Label_Validating = new javax.swing.JLabel();
        TextField_Training = new javax.swing.JTextField();
        TextField_Testing = new javax.swing.JTextField();
        TextField_Validating = new javax.swing.JTextField();
        CheckBox_PartitionSamplesByFile = new javax.swing.JCheckBox();
        Button_OK = new javax.swing.JButton();
        Button_Cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Panel_Directories.setBorder(javax.swing.BorderFactory.createTitledBorder("Directories"));

        Label_Samples.setText("Samples Directory:");

        TextField_Samples.setColumns(20);
        TextField_Samples.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_SamplesKeyPressed(evt);
            }
        });

        Label_Images.setText("Default Images Directory:");

        TextField_Images.setColumns(20);
        TextField_Images.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_ImagesKeyPressed(evt);
            }
        });

        Label_Attributes.setText("Default Attributes Directory:");

        TextField_Attributes.setColumns(20);
        TextField_Attributes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_AttributesKeyPressed(evt);
            }
        });

        Label_Characters.setText("Default Characters Directory:");

        TextField_Characters.setColumns(20);
        TextField_Characters.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_CharactersKeyPressed(evt);
            }
        });

        Label_Root.setText("Project Root Directory:");

        TextField_Root.setEditable(false);
        TextField_Root.setColumns(20);

        javax.swing.GroupLayout Panel_DirectoriesLayout = new javax.swing.GroupLayout(Panel_Directories);
        Panel_Directories.setLayout(Panel_DirectoriesLayout);
        Panel_DirectoriesLayout.setHorizontalGroup(
            Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_DirectoriesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Samples)
                    .addComponent(Label_Images)
                    .addComponent(Label_Attributes)
                    .addComponent(Label_Characters)
                    .addComponent(Label_Root))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextField_Root, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_Samples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_Images, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_Attributes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_Characters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Panel_DirectoriesLayout.setVerticalGroup(
            Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_DirectoriesLayout.createSequentialGroup()
                .addGroup(Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Samples)
                    .addComponent(TextField_Samples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Images)
                    .addComponent(TextField_Images, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Attributes)
                    .addComponent(TextField_Attributes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Characters)
                    .addComponent(TextField_Characters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_DirectoriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextField_Root, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_Root)))
        );

        Panel_Images.setBorder(javax.swing.BorderFactory.createTitledBorder("Images"));

        Label_ImageSize.setText("Default Image Size:");

        TextField_ImageSize.setColumns(20);
        TextField_ImageSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_ImageSizeKeyPressed(evt);
            }
        });

        Label_Local.setText("Default Small Window Size (Local):");

        TextField_Local.setColumns(20);
        TextField_Local.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_LocalKeyPressed(evt);
            }
        });

        Label_Window.setText("Default Medium Window Size (Window):");

        TextField_Window.setColumns(20);
        TextField_Window.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_WindowKeyPressed(evt);
            }
        });

        Label_Overview.setText("Default Large Window Size (Overview):");

        TextField_Overview.setColumns(20);
        TextField_Overview.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_OverviewKeyPressed(evt);
            }
        });

        Label_OverviewSaveSize.setText("Overview Saved Size:");

        Label_MontageSavedSize.setText("Montage Saved Size:");

        TextField_OverviewSaveSize.setColumns(20);
        TextField_OverviewSaveSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_OverviewSaveSizeKeyPressed(evt);
            }
        });

        TextField_MontageSize.setColumns(20);
        TextField_MontageSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_MontageSizeKeyPressed(evt);
            }
        });

        Label_ImageFormat.setText("Image Format:");

        ComboBox_ImageFormat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "jpg", "png" }));

        Label_Zoom.setText("Default Zoom:");

        TextField_Zoom.setColumns(20);
        TextField_Zoom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_ZoomKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout Panel_ImagesLayout = new javax.swing.GroupLayout(Panel_Images);
        Panel_Images.setLayout(Panel_ImagesLayout);
        Panel_ImagesLayout.setHorizontalGroup(
            Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_ImagesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_ImagesLayout.createSequentialGroup()
                        .addComponent(Label_ImageSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextField_ImageSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_ImagesLayout.createSequentialGroup()
                        .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label_Local)
                            .addComponent(Label_Window)
                            .addComponent(Label_Overview))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextField_Local)
                            .addComponent(TextField_Window)
                            .addComponent(TextField_Overview)
                            .addComponent(TextField_OverviewSaveSize)
                            .addComponent(TextField_MontageSize)
                            .addComponent(ComboBox_ImageFormat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(Panel_ImagesLayout.createSequentialGroup()
                        .addComponent(Label_Zoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TextField_Zoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_ImagesLayout.createSequentialGroup()
                        .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label_OverviewSaveSize)
                            .addComponent(Label_MontageSavedSize)
                            .addComponent(Label_ImageFormat))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Panel_ImagesLayout.setVerticalGroup(
            Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_ImagesLayout.createSequentialGroup()
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_ImageSize)
                    .addComponent(TextField_ImageSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Local)
                    .addComponent(TextField_Local, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Window)
                    .addComponent(TextField_Window, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Overview)
                    .addComponent(TextField_Overview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_OverviewSaveSize)
                    .addComponent(TextField_OverviewSaveSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_MontageSavedSize)
                    .addComponent(TextField_MontageSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_ImageFormat)
                    .addComponent(ComboBox_ImageFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_ImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Zoom)
                    .addComponent(TextField_Zoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Panel_SessionInformation.setBorder(javax.swing.BorderFactory.createTitledBorder("Session Information (Preset)"));

        Label_SessionID.setText("Project Name:");

        Label_User.setText("User Name:");

        TextField_SessionID.setEditable(false);
        TextField_SessionID.setColumns(20);
        TextField_SessionID.setEnabled(false);
        TextField_SessionID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_SessionIDKeyPressed(evt);
            }
        });

        TextField_User.setEditable(false);
        TextField_User.setColumns(20);
        TextField_User.setEnabled(false);
        TextField_User.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_UserKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout Panel_SessionInformationLayout = new javax.swing.GroupLayout(Panel_SessionInformation);
        Panel_SessionInformation.setLayout(Panel_SessionInformationLayout);
        Panel_SessionInformationLayout.setHorizontalGroup(
            Panel_SessionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_SessionInformationLayout.createSequentialGroup()
                .addGroup(Panel_SessionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_SessionID)
                    .addComponent(Label_User))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Panel_SessionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextField_SessionID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_User, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Panel_SessionInformationLayout.setVerticalGroup(
            Panel_SessionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_SessionInformationLayout.createSequentialGroup()
                .addGroup(Panel_SessionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_SessionID)
                    .addComponent(TextField_SessionID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_SessionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_User)
                    .addComponent(TextField_User, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Panel_KMeans.setBorder(javax.swing.BorderFactory.createTitledBorder("K-Means Clustering Parameters"));

        Label_K.setText("K:");

        TextField_K.setColumns(20);
        TextField_K.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_KKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout Panel_KMeansLayout = new javax.swing.GroupLayout(Panel_KMeans);
        Panel_KMeans.setLayout(Panel_KMeansLayout);
        Panel_KMeansLayout.setHorizontalGroup(
            Panel_KMeansLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_KMeansLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label_K)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TextField_K, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        Panel_KMeansLayout.setVerticalGroup(
            Panel_KMeansLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_KMeansLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(Label_K)
                .addComponent(TextField_K, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Panel_MachineLearning.setBorder(javax.swing.BorderFactory.createTitledBorder("Machine Learning Parameters"));

        Label_Training.setText("%Samples for Training:");

        Label_Testing.setText("%Samples for Testing:");

        Label_Validating.setText("%Samples for Validating:");

        TextField_Training.setColumns(20);
        TextField_Training.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_TrainingKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextField_TrainingKeyReleased(evt);
            }
        });

        TextField_Testing.setColumns(20);
        TextField_Testing.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_TestingKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextField_TestingKeyReleased(evt);
            }
        });

        TextField_Validating.setEditable(false);
        TextField_Validating.setColumns(20);
        TextField_Validating.setEnabled(false);
        TextField_Validating.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextField_ValidatingKeyPressed(evt);
            }
        });

        CheckBox_PartitionSamplesByFile.setSelected(true);
        CheckBox_PartitionSamplesByFile.setText("Partition Samples by File (vs. by Pixel)");

        javax.swing.GroupLayout Panel_MachineLearningLayout = new javax.swing.GroupLayout(Panel_MachineLearning);
        Panel_MachineLearning.setLayout(Panel_MachineLearningLayout);
        Panel_MachineLearningLayout.setHorizontalGroup(
            Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_MachineLearningLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_MachineLearningLayout.createSequentialGroup()
                        .addGroup(Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label_Validating)
                            .addComponent(CheckBox_PartitionSamplesByFile))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_MachineLearningLayout.createSequentialGroup()
                        .addGroup(Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Panel_MachineLearningLayout.createSequentialGroup()
                                .addComponent(Label_Training)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                                .addComponent(TextField_Training, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Panel_MachineLearningLayout.createSequentialGroup()
                                .addComponent(Label_Testing)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(TextField_Testing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Panel_MachineLearningLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(TextField_Validating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        Panel_MachineLearningLayout.setVerticalGroup(
            Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_MachineLearningLayout.createSequentialGroup()
                .addGroup(Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Training)
                    .addComponent(TextField_Training, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Testing)
                    .addComponent(TextField_Testing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_MachineLearningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_Validating)
                    .addComponent(TextField_Validating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CheckBox_PartitionSamplesByFile))
        );

        javax.swing.GroupLayout Panel_MainLayout = new javax.swing.GroupLayout(Panel_Main);
        Panel_Main.setLayout(Panel_MainLayout);
        Panel_MainLayout.setHorizontalGroup(
            Panel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_MainLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(Panel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Panel_MachineLearning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Panel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Panel_Images, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Panel_Directories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Panel_SessionInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Panel_KMeans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(551, Short.MAX_VALUE))
        );
        Panel_MainLayout.setVerticalGroup(
            Panel_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel_SessionInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_Directories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_Images, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_KMeans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_MachineLearning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        ScrollPane_Main.setViewportView(Panel_Main);

        Button_OK.setText("OK");
        Button_OK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Button_OKMouseClicked(evt);
            }
        });

        Button_Cancel.setText("Cancel");
        Button_Cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Button_CancelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Button_OK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Cancel)
                .addContainerGap(392, Short.MAX_VALUE))
            .addComponent(ScrollPane_Main, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ScrollPane_Main, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button_Cancel)
                    .addComponent(Button_OK))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_OKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Button_OKMouseClicked
        boolean ok = setParentDataSamplerParameters();

        if (ok) {
            fds.checkPriorPartitioningScheme(false);
            this.setVisible(false);
            doneSelection=true;
        }
    }//GEN-LAST:event_Button_OKMouseClicked

    private void TextField_ZoomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_ZoomKeyPressed
        setDoubleEditable(evt, this.TextField_Zoom);
    }//GEN-LAST:event_TextField_ZoomKeyPressed

    private void TextField_LocalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_LocalKeyPressed
        setIntegerEditable(evt, this.TextField_Local);
    }//GEN-LAST:event_TextField_LocalKeyPressed

    private void TextField_WindowKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_WindowKeyPressed
        setIntegerEditable(evt, this.TextField_Window);
    }//GEN-LAST:event_TextField_WindowKeyPressed

    private void TextField_OverviewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_OverviewKeyPressed
        setIntegerEditable(evt, this.TextField_Overview);
    }//GEN-LAST:event_TextField_OverviewKeyPressed

    private void TextField_ImageSizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_ImageSizeKeyPressed
        setIntegerEditable(evt, this.TextField_ImageSize);
    }//GEN-LAST:event_TextField_ImageSizeKeyPressed

    private void TextField_KKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_KKeyPressed
        setIntegerEditable(evt, this.TextField_K);
    }//GEN-LAST:event_TextField_KKeyPressed

    private void TextField_ImagesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_ImagesKeyPressed
        setStandardCharacterSetEditable(evt, TextField_Images);
    }//GEN-LAST:event_TextField_ImagesKeyPressed

    private void TextField_AttributesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_AttributesKeyPressed
        setStandardCharacterSetEditable(evt, TextField_Attributes);
    }//GEN-LAST:event_TextField_AttributesKeyPressed

    private void TextField_CharactersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_CharactersKeyPressed
        setStandardCharacterSetEditable(evt, TextField_Characters);
    }//GEN-LAST:event_TextField_CharactersKeyPressed

    private void TextField_SessionIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_SessionIDKeyPressed
        setStandardCharacterSetEditable(evt, TextField_SessionID);
    }//GEN-LAST:event_TextField_SessionIDKeyPressed

    private void TextField_UserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_UserKeyPressed
        setStandardCharacterSetEditable(evt, TextField_User);
    }//GEN-LAST:event_TextField_UserKeyPressed

    private void TextField_SamplesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_SamplesKeyPressed
        setStandardCharacterSetEditable(evt, TextField_Samples);
    }//GEN-LAST:event_TextField_SamplesKeyPressed

    private void Button_CancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Button_CancelMouseClicked
        doneSelection=true;
        this.setVisible(false);
    }//GEN-LAST:event_Button_CancelMouseClicked

    private void TextField_OverviewSaveSizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_OverviewSaveSizeKeyPressed
        setIntegerEditable(evt, this.TextField_OverviewSaveSize);
    }//GEN-LAST:event_TextField_OverviewSaveSizeKeyPressed

    private void TextField_MontageSizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_MontageSizeKeyPressed
        setIntegerEditable(evt, this.TextField_MontageSize);
    }//GEN-LAST:event_TextField_MontageSizeKeyPressed

    private void TextField_TrainingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_TrainingKeyPressed
        setIntegerEditable(evt, this.TextField_Training);
    }//GEN-LAST:event_TextField_TrainingKeyPressed

    private void TextField_TestingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_TestingKeyPressed
        setIntegerEditable(evt, this.TextField_Testing);
    }//GEN-LAST:event_TextField_TestingKeyPressed

    private void TextField_ValidatingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_ValidatingKeyPressed
        setIntegerEditable(evt, this.TextField_Validating);
    }//GEN-LAST:event_TextField_ValidatingKeyPressed

    private void TextField_TrainingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_TrainingKeyReleased
        setValidationPercentage();
    }//GEN-LAST:event_TextField_TrainingKeyReleased

    private void TextField_TestingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextField_TestingKeyReleased
        setValidationPercentage();
    }//GEN-LAST:event_TextField_TestingKeyReleased

    private void setValidationPercentage() {
        int train = getTrainingPercentage();
        int test = getTestingPercentage();
        int validate = 100 - (train + test);
        this.TextField_Validating.setText(Integer.toString(validate));
    }

    private int getTrainingPercentage() {
        if (this.TextField_Training.getText() == null) {
            return 0;
        }
        if (this.TextField_Training.getText().length() == 0) {
            return 0;
        }

        return Integer.parseInt(this.TextField_Training.getText());
    }

    private int getTestingPercentage() {
        if (this.TextField_Testing.getText() == null) {
            return 0;
        }
        if (this.TextField_Testing.getText().length() == 0) {
            return 0;
        }

        return Integer.parseInt(this.TextField_Testing.getText());
    }

    public static void setDoubleEditable(java.awt.event.KeyEvent evt, JTextField tf) {
        boolean negativeOK = false;
        boolean dotOK = false;
        if (tf.getText().length() == 0) {
            negativeOK = true;
        } else if (tf.getText().indexOf('-') < 0 && tf.getCaretPosition() == 0) {
            negativeOK = true;
        }
        if (tf.getText().indexOf('.') < 0) {
            dotOK = true;
        }
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') || evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            tf.setEditable(true);
        } else if (evt.getKeyChar() == '.' && dotOK) {
            tf.setEditable(true);
        } else if (evt.getKeyChar() == '-' && negativeOK) {
            tf.setEditable(true);
        } else {
            tf.setEditable(false);
        }
    }

    public static void setIntegerEditable(java.awt.event.KeyEvent evt, JTextField tf) {
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') || evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            tf.setEditable(true);
        } else {
            tf.setEditable(false);
        }
    }

    public static void setStandardCharacterSetEditable(java.awt.event.KeyEvent evt, JTextField tf) {
        if ((evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') || (evt.getKeyChar() >= 'a' && evt.getKeyChar() <= 'z') || (evt.getKeyChar() >= 'A' && evt.getKeyChar() <= 'Z') || evt.getKeyChar() == '.' || evt.getKeyChar() == '_' || evt.getKeyCode() == KeyEvent.VK_DELETE || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            tf.setEditable(true);
        } else {
            tf.setEditable(false);
        }
    }

    private boolean setParentDataSamplerParameters() {
        fds.defaultZoom = Double.parseDouble(this.TextField_Zoom.getText());
        fds.defaultLocalSize = Integer.parseInt(this.TextField_Local.getText());
        fds.defaultWindowSize = Integer.parseInt(this.TextField_Window.getText());
        fds.defaultOverviewSize = Integer.parseInt(this.TextField_Overview.getText());
        fds.defaultImageWidth = Integer.parseInt(this.TextField_ImageSize.getText());

        fds.savedMontageSize = Integer.parseInt(this.TextField_MontageSize.getText());
        fds.savedOverviewSize = Integer.parseInt(this.TextField_OverviewSaveSize.getText());

        fds.defaultImageFormat = (String) this.ComboBox_ImageFormat.getSelectedItem();

        fds.kDefault = Integer.parseInt(this.TextField_K.getText());

        fds.rootDirectory = this.TextField_Root.getText();
        fds.defaultImagesDirectory = this.TextField_Images.getText();
        fds.defaultCharactersDirectory = this.TextField_Characters.getText();
        fds.defaultAttributesDirectory = this.TextField_Attributes.getText();
        fds.defaultSamplesDirectory = this.TextField_Samples.getText();

        fds.user = this.TextField_User.getText();
        fds.projectName = this.TextField_SessionID.getText();

        fds.defaultTrainingPercentage = Integer.parseInt(this.TextField_Training.getText());
        fds.defaultTestingPercentage = Integer.parseInt(this.TextField_Testing.getText());
        fds.defaultValidationPercentage = Integer.parseInt(this.TextField_Validating.getText());

        if (defaultValidationPercentage > 100 || defaultValidationPercentage < 0) {
            JOptionPane.showMessageDialog(this, "Please set the Training, Testing, and Validation percentages so that they equal 100");
            return false;
        }

        if (fds.defaultTestingPercentage < 0 || fds.defaultTestingPercentage < 0 || fds.defaultValidationPercentage < 0) {
            JOptionPane.showMessageDialog(this, "Please set Training, Testing, and Validation percentages to be at or above 0");
            return false;
        }

        if (fds.defaultTestingPercentage > 100 || fds.defaultTestingPercentage > 100 || fds.defaultValidationPercentage > 100) {
            JOptionPane.showMessageDialog(this, "Please set Training, Testing, and Validation percentages to be at or below 100");
            return false;
        }

        fds.partitionByFile = this.CheckBox_PartitionSamplesByFile.isSelected();

        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!use a static method to set;
        fds.checkDirectories();
        fds.setWindowSizeInformation();

        /*

        try {
            Files.createDirectories(Paths.get(fds.rootDirectory + File.separator + fds.defaultImagesDirectory));
        } catch (IOException ex) {
            Logger.getLogger(Frame_Parameters.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Files.createDirectories(Paths.get(fds.rootDirectory + File.separator + fds.defaultCharactersDirectory));
        } catch (IOException ex) {
            Logger.getLogger(Frame_Parameters.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Files.createDirectories(Paths.get(fds.rootDirectory + File.separator + fds.defaultAttributesDirectory));
        } catch (IOException ex) {
            Logger.getLogger(Frame_Parameters.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        try {
            Files.createDirectories(Paths.get(fds.rootDirectory + File.separator + fds.defaultSamplesDirectory));
        } catch (IOException ex) {
            Logger.getLogger(Frame_Parameters.class.getName()).log(Level.SEVERE, null, ex);
        }
         */
        return true;

    }

    private void setDataSamplerParameters() {
        defaultZoom = fds.defaultZoom;
        defaultLocalSize = fds.defaultLocalSize;
        defaultWindowSize = fds.defaultWindowSize;
        defaultOverviewSize = fds.defaultOverviewSize;
        defaultImageWidth = fds.defaultImageWidth;

        savedMontageSize = fds.savedMontageSize;
        savedOverviewSize = fds.savedOverviewSize;

        defaultImageFormat = fds.defaultImageFormat;

        kDefault = fds.kDefault;

        rootDirectory = fds.rootDirectory;
        defaultImagesDirectory = fds.defaultImagesDirectory;
        defaultCharactersDirectory = fds.defaultCharactersDirectory;
        defaultAttributesDirectory = fds.defaultAttributesDirectory;
        defaultSamplesDirectory = fds.defaultSamplesDirectory;

        defaultTrainingPercentage = fds.defaultTrainingPercentage;
        defaultTestingPercentage = fds.defaultTestingPercentage;
        defaultValidationPercentage = fds.defaultValidationPercentage;

        partitionByFile = fds.partitionByFile;

        user = fds.user;
        sessionID = fds.projectName;

        setTextFields();

    }

    private void setTextFields() {
        this.TextField_Zoom.setText(String.valueOf(defaultZoom));
        this.TextField_Local.setText(String.valueOf(defaultLocalSize));
        this.TextField_Window.setText(String.valueOf(defaultWindowSize));
        this.TextField_Overview.setText(String.valueOf(defaultOverviewSize));
        this.TextField_ImageSize.setText(String.valueOf(defaultImageWidth));

        this.TextField_K.setText(String.valueOf(kDefault));

        this.TextField_Root.setText(rootDirectory);
        this.TextField_Images.setText(defaultImagesDirectory);
        this.TextField_Characters.setText(defaultCharactersDirectory);
        this.TextField_Attributes.setText(defaultAttributesDirectory);
        this.TextField_Samples.setText(defaultSamplesDirectory);

        this.TextField_User.setText(user);
        this.TextField_SessionID.setText(sessionID);

        this.TextField_MontageSize.setText(String.valueOf(savedMontageSize));
        this.TextField_OverviewSaveSize.setText(String.valueOf(savedOverviewSize));

        if (defaultImageFormat == null) {
            defaultImageFormat = "jpg";
        }
        this.ComboBox_ImageFormat.setSelectedItem(defaultImageFormat);

        this.TextField_Training.setText(String.valueOf(defaultTrainingPercentage));
        this.TextField_Testing.setText(String.valueOf(defaultTestingPercentage));
        this.TextField_Validating.setText(String.valueOf(defaultValidationPercentage));

        this.CheckBox_PartitionSamplesByFile.setSelected(partitionByFile);

    }

    double defaultZoom;
    int defaultLocalSize;
    int defaultWindowSize;
    int defaultOverviewSize;
    int defaultImageWidth;

    int defaultTrainingPercentage;
    int defaultTestingPercentage;
    int defaultValidationPercentage;

    boolean partitionByFile;

    int savedMontageSize;
    int savedOverviewSize;

    String defaultImageFormat;

    int kDefault;

    String rootDirectory;
    String defaultImagesDirectory;
    String defaultCharactersDirectory;
    String defaultAttributesDirectory;
    String defaultSamplesDirectory;

    String user;
    String sessionID;
    
    boolean doneSelection=false;

    Frame_DataSampler fds;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_Cancel;
    private javax.swing.JButton Button_OK;
    private javax.swing.JCheckBox CheckBox_PartitionSamplesByFile;
    private javax.swing.JComboBox<String> ComboBox_ImageFormat;
    private javax.swing.JLabel Label_Attributes;
    private javax.swing.JLabel Label_Characters;
    private javax.swing.JLabel Label_ImageFormat;
    private javax.swing.JLabel Label_ImageSize;
    private javax.swing.JLabel Label_Images;
    private javax.swing.JLabel Label_K;
    private javax.swing.JLabel Label_Local;
    private javax.swing.JLabel Label_MontageSavedSize;
    private javax.swing.JLabel Label_Overview;
    private javax.swing.JLabel Label_OverviewSaveSize;
    private javax.swing.JLabel Label_Root;
    private javax.swing.JLabel Label_Samples;
    private javax.swing.JLabel Label_SessionID;
    private javax.swing.JLabel Label_Testing;
    private javax.swing.JLabel Label_Training;
    private javax.swing.JLabel Label_User;
    private javax.swing.JLabel Label_Validating;
    private javax.swing.JLabel Label_Window;
    private javax.swing.JLabel Label_Zoom;
    private javax.swing.JPanel Panel_Directories;
    private javax.swing.JPanel Panel_Images;
    private javax.swing.JPanel Panel_KMeans;
    private javax.swing.JPanel Panel_MachineLearning;
    private javax.swing.JPanel Panel_Main;
    private javax.swing.JPanel Panel_SessionInformation;
    private javax.swing.JScrollPane ScrollPane_Main;
    private javax.swing.JTextField TextField_Attributes;
    private javax.swing.JTextField TextField_Characters;
    private javax.swing.JTextField TextField_ImageSize;
    private javax.swing.JTextField TextField_Images;
    private javax.swing.JTextField TextField_K;
    private javax.swing.JTextField TextField_Local;
    private javax.swing.JTextField TextField_MontageSize;
    private javax.swing.JTextField TextField_Overview;
    private javax.swing.JTextField TextField_OverviewSaveSize;
    private javax.swing.JTextField TextField_Root;
    private javax.swing.JTextField TextField_Samples;
    private javax.swing.JTextField TextField_SessionID;
    private javax.swing.JTextField TextField_Testing;
    private javax.swing.JTextField TextField_Training;
    private javax.swing.JTextField TextField_User;
    private javax.swing.JTextField TextField_Validating;
    private javax.swing.JTextField TextField_Window;
    private javax.swing.JTextField TextField_Zoom;
    // End of variables declaration//GEN-END:variables
}
